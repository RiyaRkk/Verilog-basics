module ripplecarryadder_gate(
  input [3:0]a,b,
  input c0,
  output[3:0]sum, 
  output cout
);
  wire xor1,xor2,xor3,xor4,and1,and2,and3,and4,and5,and6,and7,and8,c1,c2,c3;
  
   //fulladder-1//
  xor x1(xor1,a[0],b[0]);
  xor x2(sum[0],xor1,c0);
  and a1(and1,a[0],b[0]);
  and a2(and2,c0,xor1);
  or o1(c1,and2,and1);
  
  //fulladder-2//
  xor x3(xor2,a[1],b[1]);
  xor x4(sum[1],xor2,c1);
  and a3(and3,a[1],b[1]);
  and a4(and4,c1,xor2);
  or o2(c2,and3,and4);
  
  //fulladder-3//
  xor x5(xor3,a[2],b[2]);
  xor x6(sum[2],xor3,c2);
  and a5(and5,a[2],b[2]);
  and a6(and6,c2,xor3);
  or o3(c3,and5,and6);
  
  //fulladder-4//
  xor x7(xor4,a[3],b[3]);
  xor x8(sum[3],xor4,c3);
  and a7(and7,a[3],b[3]);
  and a8(and8,c3,xor4);
  or o4(cout,and7,and8);
endmodule
  
